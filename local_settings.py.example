# Copy this file to settings_local.py and then edit it

# Make sure to keep DEBUG False for production
DEBUG = False
TEMPLATE_DEBUG = DEBUG

# Recommended database is PostgreSQL using postgresql_psycopg2 engine
# sqlite3 also works and is useful for development, the following will work out of the box:

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3', # Add 'postgresql_psycopg2', 'mysql', 'sqlite3' or 'oracle'.
        'NAME': 'test_databases/default.sqlite',                   # Or path to database file if using sqlite3.
        'USER': '',                             # Not used with sqlite3.
        'PASSWORD': '',                         # Not used with sqlite3.
        'HOST': '',                             # Set to empty string for localhost. Not used with sqlite3.
        'PORT': '',                             # Set to empty string for default. Not used with sqlite3.
    }
}

# Make this unique, and don't share it with anybody.
SECRET_KEY = '!d*b0kzmxdg-!d=o^!8j#cr6^e666e$#wm0!m(uk3d&ix2)2sf'

LOCAL_PHOTO_BUCKETS_BASE_PATH = 'photo_buckets'
LOCAL_PHOTO_BUCKET_URL_FORMAT_STR = '/photos/{0}/{1}.jpg'

UNIVERSAL_PUSH_PROVIDER_URL = 'http://127.0.0.1:8800'


# Buckets where we upload new avatars
AVATAR_BUCKETS = (
    's3:shotvibe-avatars-01:{filename}',
    's3:shotvibe-avatars-02:{filename}'
)

# Format string for user avatar files. It should contain keyword argiments
# `user_id` and `timestamp`.
AVATAR_FILENAME_FORMAT_STRING = "user-avatar-{user_id}-{timestamp}.jpg"

# Map of Storage:URL_Format_String for avatar images.
# This is used to construct URL for a user's avatar from internal
# representation storage:bucket_name:filename.
AVATAR_STORAGE_URL_FORMAT_STRING_MAP = {
    's3': 'https://{bucket_name}.s3.amazonaws.com/{filename}'
}

# Data required to generate default avatar file.
# (format_string, min_number, max_number)
DEFAULT_AVATAR_FILES = [
    ('s3:shotvibe-avatars-01:default-avatar-{0:04d}.jpg', 1, 78),
    # ('foo:bar2:avatar_{0}', 41, 78)
]

# AWS Credentials
AWS_ACCESS_KEY = "************"
AWS_SECRET_ACCESS_KEY = "*******************"
